class Solution {
public:
    int trap(vector<int>& height) {
        int n=height.size();
        vector<int>mxl(n);
        vector<int>mxr(n);
        mxl[0]=height[0];
        mxr[n-1]=height[n-1];
        for(int i=1;i<height.size();i++){
            int ans=max(mxl[i-1],height[i]);
            mxl[i]=ans;
        }
        for(int i=0;i<n;i++){
            cout<<mxl[i]<<" ";
        }
        for(int i=n-2;i>=0;i--){
            int ans=max(mxr[i+1],height[i]);
            mxr[i]=ans;
        }
        cout<<endl;
        for(int i=0;i<n;i++){
            cout<<mxr[i]<<" ";
        }
        int res=0;
        for(int i=0;i<n;i++){
            res+=(min(mxl[i],mxr[i])-height[i]);
        }
        return res;
    }
};
